/**
 * Elite Android Build Configuration
 * 
 * Production-ready Android build configuration with optimization,
 * security, and performance enhancements.
 */

apply plugin: "com.android.application"
apply plugin: "com.facebook.react"

import com.android.build.OutputFile

/**
 * This is the configuration block to customize your React Native Android app.
 */
react {
    /* Folders */
    root = file("../../")
    reactNativeDir = file("../../node_modules/react-native")
    codegenDir = file("../../node_modules/react-native-codegen")
    cliFile = file("../../node_modules/react-native/cli.js")

    /* Variants */
    debuggableVariants = ["liteDebug", "debug"]

    /* Bundling */
    bundleCommand = "ram-bundle"
    bundleInDebug = false
    bundleInRelease = true
    bundleInLiteDebug = false

    /* Hermes Commands */
    hermesCommand = "../../node_modules/react-native/sdks/hermesc/%OS-BIN%/hermesc"

    /* Bundle Config */
    bundleConfig = file(../../metro.config.js)
}

/**
 * Set this to true to create four separate APKs instead of one,
 * one for each native architecture. This is useful if you don't
 * use App Bundles (https://developer.android.com/guide/app-bundle/)
 * and want to have separate APKs to upload to the Play Store.
 */
def enableSeparateBuildPerCPUArchitecture = false

/**
 * Set this to true to Run Proguard on Release builds to minify the Java bytecode.
 */
def enableProguardInReleaseBuilds = false

/**
 * The preferred build flavor of JavaScriptCore (JSC)
 */
def jscFlavor = 'org.webkit:android-jsc:+'

/**
 * Private function to get the list of Native Architectures you want to build.
 * This reads the value from reactNativeArchitectures in your gradle.properties
 * file and works together with the --active-arch-only flag of react-native run-android.
 */
def reactNativeArchitectures() {
    def value = project.getProperties().get("reactNativeArchitectures")
    return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

android {
    ndkVersion rootProject.ext.ndkVersion

    compileSdkVersion rootProject.ext.compileSdkVersion

    namespace "com.nationwidetollhub"
    defaultConfig {
        applicationId "com.nationwidetollhub"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0.0"
        
        // Enable multidex
        multiDexEnabled true
        
        // Vector drawable support
        vectorDrawables.useSupportLibrary = true
        
        // App signing
        signingConfig signingConfigs.debug
        
        // Proguard
        proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        
        // Test instrumentation runner
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        
        // Build config fields
        buildConfigField "String", "API_BASE_URL", '"https://api.nationwidetollhub.com"'
        buildConfigField "String", "APP_NAME", '"Nationwide Toll Hub"'
        buildConfigField "boolean", "DEBUG_MODE", "false"
        
        // Manifest placeholders
        manifestPlaceholders = [
            appName: "Nationwide Toll Hub",
            appIcon: "@mipmap/ic_launcher",
            appRoundIcon: "@mipmap/ic_launcher_round"
        ]
    }

    signingConfigs {
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            applicationIdSuffix ".debug"
            versionNameSuffix "-debug"
            buildConfigField "String", "API_BASE_URL", '"https://api-dev.nationwidetollhub.com"'
            buildConfigField "boolean", "DEBUG_MODE", "true"
        }
        release {
            debuggable false
            minifyEnabled enableProguardInReleaseBuilds
            shrinkResources enableProguardInReleaseBuilds
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
            buildConfigField "String", "API_BASE_URL", '"https://api.nationwidetollhub.com"'
            buildConfigField "boolean", "DEBUG_MODE", "false"
        }
        staging {
            initWith release
            debuggable false
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release
            applicationIdSuffix ".staging"
            versionNameSuffix "-staging"
            buildConfigField "String", "API_BASE_URL", '"https://api-staging.nationwidetollhub.com"'
            buildConfigField "boolean", "DEBUG_MODE", "false"
        }
    }

    splits {
        abi {
            reset()
            enable enableSeparateBuildPerCPUArchitecture
            universalApk false
            include (*reactNativeArchitectures())
        }
    }

    packagingOptions {
        pickFirst "lib/x86/libc++_shared.so"
        pickFirst "lib/x86_64/libc++_shared.so"
        pickFirst "lib/arm64-v8a/libc++_shared.so"
        pickFirst "lib/armeabi-v7a/libc++_shared.so"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    buildFeatures {
        buildConfig true
    }
}

dependencies {
    implementation "com.facebook.react:react-native:+"
    implementation "androidx.multidex:multidex:2.0.1"
    
    // Firebase
    implementation platform('com.google.firebase:firebase-bom:32.7.0')
    implementation 'com.google.firebase:firebase-messaging'
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-crashlytics'
    
    // Security
    implementation 'androidx.security:security-crypto:1.1.0-alpha06'
    
    // Performance
    implementation 'androidx.startup:startup-runtime:1.1.1'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}

apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
